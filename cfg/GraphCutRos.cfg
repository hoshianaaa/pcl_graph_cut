#!/usr/bin/env python
PACKAGE = "pcl_graph_cut"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("voxel_resolution", double_t, 0, "target mean label number", 0.001, 0.0005, 0.03)
gen.add("seed_resolution", double_t, 0, "target mean label number", 0.01, 0.0005, 0.05)
gen.add("color_importance", double_t, 0, "target mean label number", 0.2, 0, 1)
gen.add("spatial_importance", double_t, 0, "target mean label number", 0.4, 0, 1)
gen.add("normal_importance", double_t, 0, "target mean label number", 1, 0, 1)

gen.add("U", double_t, 0, "target mean label number", 30, 1, 100)
gen.add("SIGMA", double_t, 0, "target mean label number variation", 10, 1, 30)
gen.add("C_SHARP", double_t, 0, "soft threshold function c sharp", 3, 0.1, 30)

gen.add("DELETE_CLOUD_SIZE_TH", int_t, 0, "cloud size threshold", 30, 1, 10000)

gen.add("PICK_SUCCESS_CLOUD_SIZE_TH", int_t, 0, "pick success cloud size diff thresold", 50, 1, 10000)
gen.add("CALC_AROUND_DISTANCE_TH", int_t, 0, "pick success cloud size diff thresold", 5, 1, 30)

size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
                  gen.const("Medium", int_t, 1, "A medium constant"),
                  gen.const("Large", int_t, 2, "A large constant"),
                  gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
                  "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "pcl_graph_cut", "GraphCutRos"))
